/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 scene.gltf 
Author: Bruce Lima (https://sketchfab.com/bw.lima)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/spalding-basket-ball-db5f9c28708142909b15212625a127f9
Title: Spalding Basket Ball
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useThree } from '@react-three/fiber'
import gsap from "gsap"
import ScrollTrigger from 'gsap/ScrollTrigger'

export function Model(props) {
  const { nodes, materials } = useGLTF('./scene.gltf')

  let camera = useThree((state) => state.camera)
  let scene = useThree((state) => state.scene)
  const group = useRef()

  useLayoutEffect(() => {
    
    gsap.fromTo(scene.position, {x:0, y: -20, z: -35}, {x:0, y: 0, z: -45})

    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: "#ball_id",
        start: "top top",
        scrub: 1,
        endTrigger: "#end",
      },
    })

    tl.to(scene.position, {x: 10}, "key1")
      .to(scene.rotation, {y: 2}, "key1")
      .to(scene.position, {y: -3}, "key")
      .to(scene.rotation, {x: 1}, "key")
      .to(scene.position, {x: -10}, "key2")
      .to(scene.rotation, {y: -4, x:1}, "key2")
      .to(scene.rotation, {x:-3}, "key3")
      .to(scene.position, {y:-8}, "key3")
      .to(scene.position, {z: 0, x: 6}, "key3")
      
      


    return () => {
     
      ScrollTrigger.getAll().forEach(trigger => trigger.kill());
    };
    
  }, [scene])

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, Math.PI / 2, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.pSphere1_aiStandardSurface1_0.geometry} material={materials.aiStandardSurface1} position={[0, 0, -0.061]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.983, 0.967, 0.983]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
